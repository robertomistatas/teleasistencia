{"version":3,"file":"main-7ee35ad5.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowDownOnSquareIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowPathIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowUpOnSquareIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ChartBarIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ChevronDownIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","../../node_modules/@heroicons/react/24/outline/esm/DocumentTextIcon.js","../../node_modules/@heroicons/react/24/outline/esm/FunnelIcon.js","../../node_modules/@heroicons/react/24/outline/esm/PhoneIcon.js","../../node_modules/@heroicons/react/24/outline/esm/TrashIcon.js","../../src/utils/operadoraUtils.js","../../src/components/ErrorBoundary.jsx","../../src/components/StatsDisplay.jsx","../../src/components/charts/BarChart.jsx","../../src/components/DetailedStatsView.jsx","../../src/components/CallDataAnalyzer.jsx","../../src/components/Logo.jsx","../../src/App.jsx","../../src/components/AssignmentManager.jsx","../../src/components/Dashboard.jsx","../../src/components/FollowUpHistory.jsx","../../src/components/LoginForm.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import * as React from \"react\";\nfunction ArrowDownOnSquareIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 8.25H7.5a2.25 2.25 0 0 0-2.25 2.25v9a2.25 2.25 0 0 0 2.25 2.25h9a2.25 2.25 0 0 0 2.25-2.25v-9a2.25 2.25 0 0 0-2.25-2.25H15M9 12l3 3m0 0 3-3m-3 3V2.25\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowDownOnSquareIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowPathIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowPathIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowUpOnSquareIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 8.25H7.5a2.25 2.25 0 0 0-2.25 2.25v9a2.25 2.25 0 0 0 2.25 2.25h9a2.25 2.25 0 0 0 2.25-2.25v-9a2.25 2.25 0 0 0-2.25-2.25H15m0-3-3-3m0 0-3 3m3-3V15\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowUpOnSquareIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChartBarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 0 1 3 19.875v-6.75ZM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V8.625ZM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V4.125Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChartBarIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChevronDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m19.5 8.25-7.5 7.5-7.5-7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction DocumentTextIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(DocumentTextIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction FunnelIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 0 1-.659 1.591l-5.432 5.432a2.25 2.25 0 0 0-.659 1.591v2.927a2.25 2.25 0 0 1-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 0 0-.659-1.591L3.659 7.409A2.25 2.25 0 0 1 3 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0 1 12 3Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(FunnelIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PhoneIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PhoneIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TrashIcon);\nexport default ForwardRef;","import { normalizeName } from './textUtils';\r\n\r\n/**\r\n * Obtiene la teleoperadora asignada a un beneficiario basado en su teléfono o nombre\r\n * @param {string|number} telefono - Teléfono del beneficiario\r\n * @param {string} nombre - Nombre del beneficiario\r\n * @param {Object} assignments - Objeto con las asignaciones de teleoperadoras\r\n * @returns {string} Nombre de la teleoperadora o 'No identificada'\r\n */\r\nexport const getTeleoperadora = (telefono, nombre, assignments) => {\r\n    if (!assignments?.asignaciones) {\r\n        return 'No identificada';\r\n    }\r\n\r\n    const normalizedTelefono = telefono?.toString().trim();\r\n    const normalizedNombre = normalizeName(nombre);\r\n\r\n    if (!normalizedTelefono && !normalizedNombre) {\r\n        return 'No identificada';\r\n    }\r\n\r\n    for (const [operadoraNombre, asignaciones] of Object.entries(assignments.asignaciones)) {\r\n        if (!Array.isArray(asignaciones)) continue;\r\n\r\n        const encontrado = asignaciones.some(asignacion => {\r\n            if (!asignacion) return false;\r\n            \r\n            const nombreAsignacionNormalizado = normalizeName(asignacion.beneficiario);\r\n            const nombreCoincide = normalizedNombre && nombreAsignacionNormalizado === normalizedNombre;\r\n            \r\n            const telefonoCoincide = normalizedTelefono && asignacion.telefonos && \r\n                Array.isArray(asignacion.telefonos) &&\r\n                asignacion.telefonos.some(tel => tel?.toString().trim() === normalizedTelefono);\r\n\r\n            return nombreCoincide || telefonoCoincide;\r\n        });\r\n        \r\n        if (encontrado) return operadoraNombre;\r\n    }\r\n    \r\n    return 'No identificada';\r\n};\r\n\r\n/**\r\n * Valida si un beneficiario tiene una teleoperadora asignada\r\n * @param {string} nombre - Nombre del beneficiario\r\n * @param {Object} assignments - Objeto con las asignaciones de teleoperadoras\r\n * @returns {boolean} True si tiene asignación, false si no\r\n */\r\nexport const tieneAsignacionTeleoperadora = (nombre, assignments) => {\r\n    return getTeleoperadora(null, nombre, assignments) !== 'No identificada';\r\n};\r\n","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false, error: null };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true, error };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.error('Error in component:', error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <div className=\"bg-red-50 border border-red-400 text-red-700 px-4 py-3 rounded relative\">\r\n                    <strong className=\"font-bold\">Ha ocurrido un error: </strong>\r\n                    <span className=\"block sm:inline\">{this.state.error.message}</span>\r\n                    <button\r\n                        onClick={() => this.setState({ hasError: false, error: null })}\r\n                        className=\"mt-2 bg-red-100 text-red-700 px-3 py-1 rounded hover:bg-red-200\"\r\n                    >\r\n                        Reintentar\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\n\r\nfunction StatsDisplay({ title, value, icon, subtitle = null, percentage = null }) {\r\n    return (\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-4\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n                {icon && <div className=\"flex-shrink-0\">{icon}</div>}\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{title}</h3>\r\n            </div>\r\n            <div className=\"flex items-baseline\">                <div>\r\n                    <p className=\"text-3xl font-bold text-gray-700 dark:text-gray-200\">\r\n                        {typeof value === 'number' ? value.toLocaleString() : value || 0}\r\n                    </p>\r\n                    {subtitle && (\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                            {subtitle}\r\n                        </p>\r\n                    )}\r\n                    {percentage !== null && (\r\n                        <span className=\"ml-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                            ({percentage}%)\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(StatsDisplay);\r\n","import React from 'react';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n    },\r\n    scales: {\r\n        y: {\r\n            beginAtZero: true,\r\n            ticks: {\r\n                precision: 0\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst BarChart = ({ data }) => {\r\n    if (!data?.labels?.length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-full w-full\">\r\n            <Bar options={options} data={data} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BarChart;\r\n","import React from 'react';\r\nimport BarChart from './charts/BarChart';\r\n\r\nconst DetailedStatsView = ({ stats, operatorStats }) => {\r\n    // Métricas por comuna\r\n    const comunasData = Object.entries(stats.comunas || {}).map(([comuna, beneficiarios]) => ({\r\n        comuna,\r\n        cantidad: Array.isArray(beneficiarios) ? beneficiarios.length : 0\r\n    })).sort((a, b) => b.cantidad - a.cantidad);\r\n\r\n    // Datos de operadoras\r\n    const operadorasData = Object.entries(operatorStats || {}).map(([operadora, data]) => ({\r\n        operadora,\r\n        totalLlamadas: data.totalLlamadas || 0,\r\n        beneficiarios: data.beneficiarios || 0,\r\n        promedioLlamadas: ((data.totalLlamadas || 0) / 30).toFixed(1),\r\n        duracionPromedio: data.duracionTotal && data.totalLlamadas ? \r\n            Math.round(data.duracionTotal / data.totalLlamadas) : 0\r\n    })).sort((a, b) => b.totalLlamadas - a.totalLlamadas);\r\n\r\n    // Datos para el gráfico\r\n    const chartData = {\r\n        labels: ['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00'],\r\n        datasets: [{\r\n            label: 'Cantidad de Llamadas',\r\n            data: [10, 15, 20, 25, 30, 25, 20, 15, 10, 5],\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-8\">\r\n            {/* Datos por Teleoperadora */}\r\n            {operadorasData.length > 0 && (\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\r\n                    <h3 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\r\n                        Métricas por Teleoperadora\r\n                    </h3>\r\n                    <div className=\"overflow-x-auto\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                            <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                                <tr>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Teleoperadora\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Total Llamadas\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Beneficiarios\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Promedio Diario\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Duración Promedio\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                                {operadorasData.map(({ operadora, totalLlamadas, beneficiarios, promedioLlamadas, duracionPromedio }) => (\r\n                                    <React.Fragment key={operadora}>\r\n                                        <tr>\r\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\r\n                                                {operadora}\r\n                                            </td>\r\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\r\n                                                {totalLlamadas}\r\n                                            </td>\r\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\r\n                                                {Array.isArray(beneficiarios) ? beneficiarios.length : beneficiarios}\r\n                                            </td>\r\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\r\n                                                {promedioLlamadas}\r\n                                            </td>\r\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\r\n                                                {duracionPromedio} min\r\n                                            </td>\r\n                                        </tr>\r\n                                        {Array.isArray(beneficiarios) && beneficiarios.length > 0 && (\r\n                                            <tr>\r\n                                                <td colSpan=\"5\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\r\n                                                    <ul className=\"list-disc pl-8\">\r\n                                                        {beneficiarios.map((beneficiario, index) => (\r\n                                                            <li key={`${operadora}-${index}`} className=\"text-gray-700 dark:text-gray-300\">\r\n                                                                {beneficiario}\r\n                                                            </li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Gráfico */}\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\r\n                <h3 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\r\n                    Distribución Horaria de Llamadas\r\n                </h3>\r\n                <div className=\"h-[400px]\">\r\n                    <BarChart data={chartData} />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Datos por Comuna */}\r\n            {comunasData.length > 0 && (\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6\">\r\n                    <h3 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\r\n                        Distribución por Comuna\r\n                    </h3>\r\n                    <div className=\"overflow-x-auto\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                            <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                                <tr>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Comuna\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Beneficiarios\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                                {comunasData.map(({ comuna, cantidad }) => (\r\n                                    <tr key={comuna}>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\r\n                                            {comuna}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\r\n                                            {cantidad}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailedStatsView;\r\n","import React, { useState, useCallback, useRef, useContext, useEffect } from 'react';\r\nimport { read, utils } from 'xlsx';\r\nimport { \r\n    ArrowUpOnSquareIcon, \r\n    ArrowDownOnSquareIcon,\r\n    ChartBarIcon,\r\n    PhoneIcon,\r\n    ClockIcon,\r\n    DocumentTextIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { DataContext } from '../App';\r\nimport { db } from '../App';\r\nimport { normalizeName } from '../utils/textUtils';\r\nimport { getTeleoperadora } from '../utils/operadoraUtils';\r\nimport { excelDateToISO } from '../utils/dateUtils';\r\nimport { prepareStatsForStorage } from '../utils/storageUtils';\r\nimport { \r\n    isLlamadaExitosa,\r\n    validateLlamada,\r\n    validateLlamadas,\r\n    createInitialStats,\r\n    parseStoredStats,\r\n    ESTADOS\r\n} from '../utils/statsUtils';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport StatsDisplay from './StatsDisplay';\r\nimport DetailedStatsView from './DetailedStatsView';\r\n\r\n// Constantes para el manejo del archivo\r\nconst CHUNK_SIZE = 1000;  // Procesar 1000 filas a la vez\r\nconst DEBOUNCE_DELAY = 300; // 300ms de espera entre eventos de cambio de archivo\r\n\r\nconst LoadingOverlay = ({ progress }) => (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-xl flex flex-col items-center w-80 max-w-[90vw]\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 dark:border-blue-400 mb-4\"></div>\r\n            <p className=\"text-lg mb-4 text-gray-900 dark:text-white\">Procesando archivo...</p>\r\n            {progress > 0 && (\r\n                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5\">\r\n                    <div \r\n                        className=\"bg-blue-600 dark:bg-blue-500 h-2.5 rounded-full transition-all duration-300\" \r\n                        style={{ width: `${progress}%` }}\r\n                    ></div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nfunction CallDataAnalyzer() {\r\n    const { callData, assignments, updateCallData } = useContext(DataContext);\r\n    const [file, setFile] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [stats, setStats] = useState(createInitialStats());\r\n    const [showDetailedStats, setShowDetailedStats] = useState(false);\r\n    const [detailedStatsData, setDetailedStatsData] = useState(null);\r\n    const fileInputRef = useRef(null);\r\n    const debounceTimerRef = useRef(null);\r\n    const uploadTimeout = useRef(null);\r\n    const processingTimeout = useRef(null);\r\n    \r\n    // Referencia al estado inicial para reseteo\r\n    const initialStatsRef = useRef(createInitialStats());\r\n    // Referencia para evitar actualizaciones cíclicas\r\n    const previousStatsRef = useRef(null);\r\n\r\n    // Limpiar timeouts al desmontar\r\n    useEffect(() => {\r\n        return () => {\r\n            if (uploadTimeout.current) clearTimeout(uploadTimeout.current);\r\n            if (processingTimeout.current) clearTimeout(processingTimeout.current);\r\n            if (debounceTimerRef.current) clearTimeout(debounceTimerRef.current);\r\n        };\r\n    }, []);\r\n\r\n    // Cargar datos guardados al montar el componente\r\n    useEffect(() => {\r\n        if (!callData) return;\r\n        try {\r\n            const parsedStats = parseStoredStats(callData);\r\n            setStats(parsedStats);\r\n        } catch (error) {\r\n            console.error('Error loading saved data:', error);\r\n            setStats(initialStatsRef.current);\r\n        }\r\n    }, [callData]);\r\n\r\n    // Función para procesar el archivo\r\n    const processFile = useCallback(async () => {\r\n        if (!file) {\r\n            setError('Por favor selecciona un archivo');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            setProgress(0);\r\n            setError(null);\r\n            \r\n            // Resetear el estado\r\n            setStats(initialStatsRef.current);\r\n\r\n            const reader = new FileReader();\r\n            \r\n            reader.onload = async (e) => {\r\n                try {\r\n                    if (!e.target?.result) {\r\n                        throw new Error('Error al leer el archivo');\r\n                    }\r\n\r\n                    const data = new Uint8Array(e.target.result);\r\n                    const workbook = read(data, { type: 'array' });\r\n                    \r\n                    if (!workbook.SheetNames.length) {\r\n                        throw new Error('El archivo Excel no contiene hojas');\r\n                    }\r\n\r\n                    const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\r\n                    if (!firstSheet) {\r\n                        throw new Error('No se pudo leer la hoja de Excel');\r\n                    }\r\n\r\n                    const rows = utils.sheet_to_json(firstSheet, { header: 1 });\r\n                    if (rows.length <= 1) {\r\n                        throw new Error('El archivo no contiene datos');\r\n                    }\r\n\r\n                    const dataRows = rows.slice(1); // Ignorar encabezados\r\n                    const totalRows = dataRows.length;\r\n\r\n                    let currentStats = createInitialStats();\r\n                    \r\n                    // Procesar en chunks\r\n                    const processChunk = async (startIndex) => {\r\n                        const endIndex = Math.min(startIndex + CHUNK_SIZE, totalRows);\r\n                        const chunk = dataRows.slice(startIndex, endIndex);\r\n                        \r\n                        chunk.forEach((row) => {\r\n                            if (!Array.isArray(row) || row.length < 10) return;\r\n                            \r\n                            try {\r\n                                // Mapear columnas según el formato del Excel\r\n                                const [\r\n                                    id,             // A: Id\r\n                                    fecha,          // B: Fecha\r\n                                    beneficiario,   // C: Beneficiario\r\n                                    comuna,         // D: Comuna\r\n                                    evento,         // E: Evento (Entrante/Saliente)\r\n                                    telefono,       // F: Fono\r\n                                    horaIni,       // G: Ini\r\n                                    horaFin,       // H: Fin\r\n                                    duracion,       // I: Seg\r\n                                    resultado,      // J: Resultado\r\n                                    observacion,    // K: Observación\r\n                                    apiId          // L: Api Id\r\n                                ] = row;\r\n\r\n                                if (!beneficiario || !fecha) return;\r\n\r\n                                const normalizedNombre = normalizeName(beneficiario);\r\n                                const fechaObj = excelDateToISO(fecha); // Convertir fecha de Excel a ISO usando utilidades\r\n                                const teleoperadora = getTeleoperadora(telefono, normalizedNombre, assignments);\r\n                                const exitoso = resultado?.toString().toLowerCase().includes('exitoso');\r\n                                const duracionMinutos = Math.round(parseInt(duracion || 0) / 60); // Convertir segundos a minutos\r\n\r\n                                // Validar y preparar la llamada\r\n                                const llamada = {\r\n                                    fecha: fechaObj,\r\n                                    hora: horaIni,\r\n                                    duracion: duracionMinutos,\r\n                                    tipo: evento?.toString().toLowerCase() || '',\r\n                                    telefono: telefono?.toString() || '',\r\n                                    teleoperadora,\r\n                                    comentarios: observacion?.toString() || '',\r\n                                    resultado: resultado?.toString() || '',\r\n                                    comuna: comuna?.toString() || '',\r\n                                    exitoso\r\n                                };\r\n\r\n                                // Actualizar estadísticas\r\n                                currentStats.totalLlamadas++;\r\n                                currentStats.entrantes += evento?.toString().toLowerCase().includes('entrante') ? 1 : 0;\r\n                                currentStats.salientes += evento?.toString().toLowerCase().includes('saliente') ? 1 : 0;\r\n                                currentStats.duracionTotal += duracionMinutos;\r\n                                currentStats.duracionPromedio = currentStats.duracionTotal / currentStats.totalLlamadas;\r\n\r\n                                // Solo procesar beneficiarios válidos (no números de teléfono)\r\n                                if (normalizedNombre && isNaN(normalizedNombre)) {\r\n                                    currentStats.beneficiarios.add(normalizedNombre);\r\n                                    \r\n                                    if (!currentStats.llamadasPorBeneficiario[normalizedNombre]) {\r\n                                        currentStats.llamadasPorBeneficiario[normalizedNombre] = [];\r\n                                    }\r\n                                    currentStats.llamadasPorBeneficiario[normalizedNombre].push(llamada);\r\n                                    \r\n                                    // Actualizar última llamada\r\n                                    if (!currentStats.ultimasLlamadas[normalizedNombre]?.fecha || \r\n                                        fechaObj > currentStats.ultimasLlamadas[normalizedNombre].fecha) {\r\n                                        currentStats.ultimasLlamadas[normalizedNombre] = llamada;\r\n                                    }\r\n\r\n                                    // Actualizar comuna\r\n                                    if (comuna) {\r\n                                        if (!currentStats.comunas.has(comuna)) {\r\n                                            currentStats.comunas.set(comuna, new Set());\r\n                                        }\r\n                                        currentStats.comunas.get(comuna).add(normalizedNombre);\r\n                                    }\r\n\r\n                                    // Actualizar estado del beneficiario\r\n                                    const ultimaLlamada = currentStats.ultimasLlamadas[normalizedNombre];\r\n                                    const diasDesdeUltimaLlamada = Math.floor((new Date() - ultimaLlamada.fecha) / (1000 * 60 * 60 * 24));\r\n                                    \r\n                                    if (exitoso && diasDesdeUltimaLlamada <= 15) {\r\n                                        currentStats.beneficiariosAlDia.add(normalizedNombre);\r\n                                    } else if (!exitoso && diasDesdeUltimaLlamada > 15) {\r\n                                        currentStats.beneficiariosPendientes.add(normalizedNombre);\r\n                                    } else if (!exitoso && diasDesdeUltimaLlamada > 30) {\r\n                                        currentStats.beneficiariosUrgentes.add(normalizedNombre);\r\n                                    }\r\n\r\n                                    // Actualizar métricas de teleoperadora\r\n                                    if (!currentStats.teleoperadoras[teleoperadora]) {\r\n                                        currentStats.teleoperadoras[teleoperadora] = {\r\n                                            total: 0,\r\n                                            exitosas: 0,\r\n                                            beneficiarios: new Set()\r\n                                        };\r\n                                    }\r\n                                    currentStats.teleoperadoras[teleoperadora].total++;\r\n                                    currentStats.teleoperadoras[teleoperadora].beneficiarios.add(normalizedNombre);\r\n                                    if (exitoso) {\r\n                                        currentStats.teleoperadoras[teleoperadora].exitosas++;\r\n                                    }\r\n                                }\r\n                            } catch (err) {\r\n                                console.error('Error processing row:', err);\r\n                            }\r\n                        });\r\n                        \r\n                        const progress = Math.round((endIndex / totalRows) * 100);\r\n                        setProgress(progress);\r\n                        setStats(currentStats);\r\n                        \r\n                        if (endIndex < totalRows) {\r\n                            processingTimeout.current = setTimeout(() => processChunk(endIndex), 0);\r\n                        } else {\r\n                            setLoading(false);\r\n                            setProgress(100);\r\n                        }\r\n                    };\r\n                    \r\n                    await processChunk(0);\r\n                } catch (error) {\r\n                    console.error('Error processing Excel:', error);\r\n                    setError(`Error al procesar el archivo: ${error.message}`);\r\n                    setStats(initialStatsRef.current);\r\n                    setLoading(false);\r\n                }\r\n            };\r\n            \r\n            reader.onerror = () => {\r\n                setError('Error al leer el archivo');\r\n                setStats(initialStatsRef.current);\r\n                setLoading(false);\r\n            };\r\n            \r\n            reader.readAsArrayBuffer(file);\r\n        } catch (error) {\r\n            console.error('Error processing file:', error);\r\n            setError(`Error al procesar el archivo: ${error.message}`);\r\n            setStats(initialStatsRef.current);\r\n            setLoading(false);\r\n        }\r\n    }, [file, assignments]);\r\n\r\n    const handleFileChange = useCallback((event) => {\r\n        const selectedFile = event.target.files?.[0];\r\n        if (!selectedFile) {\r\n            setError('Por favor selecciona un archivo');\r\n            return;\r\n        }\r\n\r\n        if (!selectedFile.name.match(/\\.(xlsx|xls)$/i)) {\r\n            setError('Por favor selecciona un archivo Excel válido (.xlsx o .xls)');\r\n            if (fileInputRef.current) {\r\n                fileInputRef.current.value = '';\r\n            }\r\n            return;\r\n        }\r\n\r\n        setFile(selectedFile);\r\n        setError(null);\r\n    }, []);\r\n\r\n    const resetState = useCallback(() => {\r\n        setFile(null);\r\n        setStats(initialStatsRef.current);\r\n        setProgress(0);\r\n        setError(null);\r\n        setLoading(false);\r\n        if (fileInputRef.current) {\r\n            fileInputRef.current.value = '';\r\n        }\r\n    }, []);\r\n\r\n    // Efecto para sincronizar con el contexto global\r\n    useEffect(() => {\r\n        if (!stats || stats.totalLlamadas === 0) return;\r\n\r\n        // Comparar con el estado previo para evitar actualizaciones innecesarias\r\n        if (previousStatsRef.current && JSON.stringify(previousStatsRef.current) === JSON.stringify(stats)) {\r\n            return;\r\n        }\r\n\r\n        previousStatsRef.current = stats;\r\n\r\n        // Actualizar el contexto global con las métricas calculadas\r\n        const operatorStats = {};\r\n\r\n        stats.beneficiarios.forEach((beneficiario) => {\r\n            const teleoperadora = getTeleoperadora(null, beneficiario, assignments);\r\n            if (!teleoperadora) return;\r\n\r\n            if (!operatorStats[teleoperadora]) {\r\n                operatorStats[teleoperadora] = {\r\n                    totalLlamadas: 0,\r\n                    beneficiarios: [],\r\n                    duracionTotal: 0,\r\n                };\r\n            }\r\n\r\n            operatorStats[teleoperadora].totalLlamadas += stats.llamadasPorBeneficiario[beneficiario]?.length || 0;\r\n            operatorStats[teleoperadora].duracionTotal += stats.llamadasPorBeneficiario[beneficiario]?.reduce((acc, llamada) => acc + llamada.duracion, 0) || 0;\r\n\r\n            if (!operatorStats[teleoperadora].beneficiarios.includes(beneficiario)) {\r\n                operatorStats[teleoperadora].beneficiarios.push(beneficiario);\r\n            }\r\n        });\r\n\r\n        updateCallData({\r\n            ...callData,\r\n            stats,\r\n            operatorStats,\r\n        });\r\n    }, [stats, updateCallData, assignments]);\r\n\r\n    return (\r\n        <ErrorBoundary>\r\n            <div className=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-lg\">                <div className=\"flex flex-col lg:flex-row items-start lg:items-center justify-between mb-6 space-y-4 lg:space-y-0\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center\">\r\n                        <DocumentTextIcon className=\"h-8 w-8 mr-2 text-blue-500 dark:text-blue-400\" />\r\n                        Registro de Llamadas\r\n                    </h2>\r\n                    \r\n                    <div className=\"flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4\">\r\n                        <button\r\n                            onClick={() => fileInputRef.current?.click()}\r\n                            className={`inline-flex items-center px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800 transition-colors duration-200\r\n                                ${loading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-600 dark:hover:bg-blue-700'} \r\n                                bg-blue-500 dark:bg-blue-600 text-white focus:ring-blue-500`}\r\n                            disabled={loading}\r\n                        >\r\n                            <ArrowUpOnSquareIcon className=\"h-5 w-5 mr-2\" />\r\n                            {file ? file.name : 'Seleccionar Archivo'}\r\n                        </button>\r\n                        \r\n                        <button\r\n                            onClick={processFile}\r\n                            disabled={!file || loading}\r\n                            className={`inline-flex items-center px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800 transition-colors duration-200\r\n                                ${file && !loading \r\n                                    ? 'bg-green-500 dark:bg-green-600 text-white hover:bg-green-600 dark:hover:bg-green-700 focus:ring-green-500' \r\n                                    : 'bg-gray-300 dark:bg-gray-700 text-gray-500 dark:text-gray-400 cursor-not-allowed'}`}\r\n                            title={!file ? 'Seleccione un archivo primero' : loading ? 'Procesando...' : 'Procesar archivo'}\r\n                        >\r\n                            <ArrowDownOnSquareIcon className=\"h-5 w-5 mr-2\" />\r\n                            {loading ? 'Procesando...' : 'Procesar Archivo'}\r\n                        </button>\r\n                        \r\n                        {stats.totalLlamadas > 0 && (\r\n                            <button\r\n                                onClick={resetState}\r\n                                className=\"inline-flex items-center px-4 py-2 bg-red-500 dark:bg-red-600 text-white rounded-lg hover:bg-red-600 dark:hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 transition-colors duration-200\"\r\n                                title=\"Limpiar datos y cargar nuevo archivo\"\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                                </svg>\r\n                                Limpiar\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                    \r\n                    <input\r\n                        type=\"file\"\r\n                        ref={fileInputRef}\r\n                        onChange={handleFileChange}\r\n                        accept=\".xlsx,.xls\"\r\n                        className=\"hidden\"\r\n                    />\r\n                </div>\r\n\r\n                {error && (\r\n                    <div className=\"mb-6 p-4 bg-red-100 dark:bg-red-900 border-l-4 border-red-500 text-red-700 dark:text-red-200\">\r\n                        <div className=\"flex items-center\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n                            </svg>\r\n                            <p className=\"font-medium\">{error}</p>\r\n                        </div>\r\n                        <button \r\n                            onClick={resetState}\r\n                            className=\"mt-2 text-sm text-red-600 dark:text-red-300 hover:text-red-800 dark:hover:text-red-100\"\r\n                        >\r\n                            Intentar de nuevo\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {loading && <LoadingOverlay progress={progress} />}\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                    <StatsDisplay\r\n                        icon={<PhoneIcon className=\"h-8 w-8 text-blue-500\" />}\r\n                        title=\"Total de Llamadas\"\r\n                        value={stats.totalLlamadas}\r\n                        subtitle={`${stats.entrantes} entrantes, ${stats.salientes} salientes`}\r\n                    />\r\n                    \r\n                    <StatsDisplay\r\n                        icon={<ChartBarIcon className=\"h-8 w-8 text-green-500\" />}\r\n                        title=\"Beneficiarios Únicos\"\r\n                        value={stats.beneficiarios.size}\r\n                        subtitle=\"Total de personas contactadas\"\r\n                    />\r\n                    \r\n                    <StatsDisplay\r\n                        icon={<ClockIcon className=\"h-8 w-8 text-purple-500\" />}\r\n                        title=\"Duración Promedio\"\r\n                        value={`${Math.round(stats.duracionPromedio)} min`}\r\n                        subtitle={`Total: ${Math.round(stats.duracionTotal)} min`}\r\n                    />\r\n                </div>                {stats.totalLlamadas > 0 && (\r\n                    <DetailedStatsView \r\n                        stats={{\r\n                            ...stats,\r\n                            comunas: stats.comunas || new Map(),\r\n                            horasPico: new Map(), // Si no estamos usando horasPico, inicializamos vacío\r\n                            totalLlamadas: stats.totalLlamadas || 0,\r\n                        }}\r\n                        operatorStats={Object.entries(stats.llamadasPorBeneficiario || {}).reduce((acc, [beneficiario, datos]) => {\r\n                            const operadora = datos.operadora || 'No asignada';\r\n                            if (!acc[operadora]) {\r\n                                acc[operadora] = {\r\n                                    totalLlamadas: 0,\r\n                                    beneficiarios: new Set(),\r\n                                    diasTrabajados: 30, // Por defecto asumimos un mes\r\n                                    duracionTotal: 0\r\n                                };\r\n                            }\r\n                            acc[operadora].totalLlamadas += datos.total || 0;\r\n                            acc[operadora].beneficiarios.add(beneficiario);\r\n                            acc[operadora].duracionTotal += (datos.total || 0) * stats.duracionPromedio;\r\n                            return acc;\r\n                        }, {})}\r\n                    />\r\n                )}\r\n            </div>\r\n        </ErrorBoundary>\r\n    );\r\n}\r\n\r\nexport default CallDataAnalyzer;\r\n","import React from 'react';\r\nimport { useTheme } from '../App';\r\n\r\nconst Logo = () => {\r\n  const { darkMode, toggleTheme } = useTheme();\r\n  \r\n  return (\r\n    <div className=\"flex items-center justify-between w-full px-4\">\r\n      <div className=\"flex items-center\">\r\n        <img \r\n          src=\"https://www.mistatas.cl/assets/img/logo-small.png\"\r\n          alt=\"Mistatas Logo\"\r\n          className=\"h-12 w-auto mr-2\"\r\n        />\r\n      </div>\r\n      <button\r\n        onClick={toggleTheme}\r\n        className=\"p-2 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\r\n        aria-label=\"Toggle dark mode\"\r\n      >\r\n        {darkMode ? (\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n          </svg>\r\n        ) : (\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\r\n          </svg>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useState, useEffect, createContext, useContext, useCallback } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { \r\n    getAuth, \r\n    signInWithEmailAndPassword, \r\n    createUserWithEmailAndPassword, \r\n    signOut, \r\n    onAuthStateChanged,\r\n    signInAnonymously,\r\n    deleteUser\r\n} from 'firebase/auth';\r\nimport { \r\n    getFirestore, \r\n    collection, \r\n    doc, \r\n    addDoc, \r\n    setDoc, \r\n    getDocs, \r\n    updateDoc, \r\n    deleteDoc,\r\n    query,\r\n    where,\r\n    Timestamp,\r\n    writeBatch\r\n} from 'firebase/firestore';\r\nimport { getAnalytics } from 'firebase/analytics';\r\nimport CallDataAnalyzer from './components/CallDataAnalyzer';\r\nimport Logo from './components/Logo';\r\nimport AssignmentManager from './components/AssignmentManager';\r\nimport Dashboard from './components/Dashboard';\r\nimport FollowUpHistory from './components/FollowUpHistory';\r\nimport LoginForm from './components/LoginForm';\r\n\r\n// Firebase Configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyASPhkFj4RwmmloxSgJzK3JhXD7-qz2yxk\",\r\n    authDomain: \"teleasistencia-6c0fd.firebaseapp.com\",\r\n    projectId: \"teleasistencia-6c0fd\",\r\n    storageBucket: \"teleasistencia-6c0fd.firebasestorage.app\",\r\n    messagingSenderId: \"551971576400\",\r\n    appId: \"1:551971576400:web:952333e1409c2ecdaf8f55\",\r\n    measurementId: \"G-4Z9KWG6JJS\"\r\n};\r\n\r\n// Firebase Initialization\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\n// Contexto para autenticación\r\nexport const AuthContext = createContext();\r\n\r\n// Contexto para datos\r\nexport const DataContext = createContext();\r\n\r\n// Proveedor de autenticación\r\nexport function AuthProvider({ children }) {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n            setUser(user);\r\n            setLoading(false);\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const value = {\r\n        user,\r\n        loading,\r\n        signIn: (email, password) => signInWithEmailAndPassword(auth, email, password),\r\n        signOut: () => signOut(auth)\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n// Hook personalizado para usar la autenticación\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\n// Estado inicial para el contexto de datos\r\nconst initialCallData = {\r\n    totalLlamadas: 0,\r\n    entrantes: 0,\r\n    salientes: 0,\r\n    duracionTotal: 0,\r\n    duracionPromedio: 0,\r\n    beneficiarios: [],\r\n    llamadasPorBeneficiario: {},\r\n    ultimasLlamadas: {},\r\n    llamadasExitosas: {},\r\n    beneficiariosAlDia: [],\r\n    beneficiariosPendientes: [],\r\n    beneficiariosUrgentes: [],\r\n    comunas: {},\r\n    teleoperadoras: {},\r\n    lastUpdate: null\r\n};\r\n\r\n// Proveedor de datos\r\nexport function DataProvider({ children }) {\r\n    const [callData, setCallData] = useState(() => {\r\n        // Intentar cargar datos desde localStorage\r\n        try {\r\n            const saved = localStorage.getItem('callData');\r\n            return saved ? JSON.parse(saved) : initialCallData;\r\n        } catch (error) {\r\n            console.error('Error loading data from localStorage:', error);\r\n            return initialCallData;\r\n        }\r\n    });\r\n\r\n    const [assignments, setAssignments] = useState(() => {\r\n        // Intentar cargar asignaciones desde localStorage\r\n        try {\r\n            const saved = localStorage.getItem('assignments');\r\n            return saved ? JSON.parse(saved) : { asignaciones: {} };\r\n        } catch (error) {\r\n            console.error('Error loading assignments from localStorage:', error);\r\n            return { asignaciones: {} };\r\n        }\r\n    });\r\n\r\n    // Guardar datos en localStorage cuando cambien\r\n    useEffect(() => {\r\n        try {\r\n            if (callData && Object.keys(callData).length > 0) {\r\n                console.log('Guardando datos en localStorage:', callData);\r\n                localStorage.setItem('callData', JSON.stringify(callData));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error guardando datos:', error);\r\n        }\r\n    }, [callData]);\r\n\r\n    // Guardar asignaciones en localStorage cuando cambien\r\n    useEffect(() => {\r\n        try {\r\n            if (assignments && Object.keys(assignments).length > 0) {\r\n                localStorage.setItem('assignments', JSON.stringify(assignments));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error guardando asignaciones:', error);\r\n        }\r\n    }, [assignments]);\r\n\r\n    // Función para actualizar datos\r\n    const updateCallData = useCallback((newData) => {\r\n        console.log('Actualizando datos de llamadas:', newData);\r\n        setCallData(prevData => {\r\n            // Asegurarse de que las estructuras de datos estén presentes\r\n            const updatedData = {\r\n                ...initialCallData,\r\n                ...prevData,\r\n                ...newData,\r\n                lastUpdate: new Date().toISOString(),\r\n                // Asegurar que las propiedades críticas existan\r\n                llamadasPorBeneficiario: {\r\n                    ...(prevData.llamadasPorBeneficiario || {}),\r\n                    ...(newData.llamadasPorBeneficiario || {})\r\n                },\r\n                beneficiarios: Array.isArray(newData.beneficiarios) ? newData.beneficiarios : [],\r\n                beneficiariosAlDia: Array.isArray(newData.beneficiariosAlDia) ? newData.beneficiariosAlDia : [],\r\n                beneficiariosPendientes: Array.isArray(newData.beneficiariosPendientes) ? newData.beneficiariosPendientes : [],\r\n                beneficiariosUrgentes: Array.isArray(newData.beneficiariosUrgentes) ? newData.beneficiariosUrgentes : []\r\n            };\r\n            return updatedData;\r\n        });\r\n    }, []);\r\n\r\n    // Función para actualizar asignaciones\r\n    const updateAssignments = useCallback((newAssignments) => {\r\n        setAssignments(prev => ({\r\n            ...prev,\r\n            asignaciones: {\r\n                ...(prev.asignaciones || {}),\r\n                ...newAssignments\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    return (\r\n        <DataContext.Provider value={{ \r\n            callData, \r\n            updateCallData, \r\n            assignments, \r\n            updateAssignments,\r\n            reset: () => {\r\n                setCallData(initialCallData);\r\n                setAssignments({ asignaciones: {} });\r\n                localStorage.removeItem('callData');\r\n                localStorage.removeItem('assignments');\r\n            }\r\n        }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    );\r\n}\r\n\r\n// Contexto del tema\r\nexport const ThemeContext = createContext();\r\n\r\n// Proveedor del tema\r\nexport function ThemeProvider({ children }) {\r\n    const [darkMode, setDarkMode] = useState(false);\r\n\r\n    const toggleTheme = () => {\r\n        setDarkMode(!darkMode);\r\n        document.documentElement.classList.toggle('dark');\r\n    };\r\n\r\n    const value = {\r\n        darkMode,\r\n        toggleTheme\r\n    };\r\n\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n}\r\n\r\n// Hook personalizado para usar el tema\r\nexport function useTheme() {\r\n    return useContext(ThemeContext);\r\n}\r\n\r\n// Componente principal de la aplicación\r\nfunction MainContent() {\r\n    const { user, loading } = useAuth();\r\n    const [activeTab, setActiveTab] = useState('dashboard');\r\n    \r\n    if (loading) {\r\n        return <div>Cargando...</div>;\r\n    }\r\n\r\n    if (!user) {\r\n        return <LoginForm />;\r\n    }    return (\r\n        <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-200\">\r\n            <div className=\"flex flex-col h-screen\">\r\n                {/* Header */}\r\n                <header className=\"bg-white dark:bg-gray-800 shadow-md\">\r\n                    <div className=\"responsive-container\">\r\n                        <div className=\"flex flex-col lg:flex-row justify-between items-center py-4 space-y-4 lg:space-y-0\">\r\n                            <div className=\"flex items-center w-full lg:w-auto justify-between\">\r\n                                <Logo />\r\n                                <button \r\n                                    onClick={() => auth.signOut()}\r\n                                    className=\"lg:hidden px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors duration-150\"\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                        <path fillRule=\"evenodd\" d=\"M3 3a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V4a1 1 0 00-1-1H3zm11 4a1 1 0 11-2 0 1 1 0 012 0zm-8 0a1 1 0 11-2 0 1 1 0 012 0zm4 0a1 1 0 11-2 0 1 1 0 012 0z\" clipRule=\"evenodd\" />\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                            \r\n                            <nav className=\"flex flex-wrap justify-center gap-2 w-full lg:w-auto overflow-x-auto\">\r\n                                <button \r\n                                    onClick={() => setActiveTab('dashboard')}\r\n                                    className={`px-4 py-2 rounded-lg transition-colors duration-150 whitespace-nowrap ${\r\n                                        activeTab === 'dashboard' \r\n                                            ? 'bg-blue-500 text-white dark:bg-blue-600' \r\n                                            : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                                    }`}\r\n                                >\r\n                                    Dashboard\r\n                                </button>\r\n                                <button \r\n                                    onClick={() => setActiveTab('llamadas')}\r\n                                    className={`px-4 py-2 rounded-lg transition-colors duration-150 whitespace-nowrap ${\r\n                                        activeTab === 'llamadas' \r\n                                            ? 'bg-blue-500 text-white dark:bg-blue-600' \r\n                                            : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                                    }`}\r\n                                >\r\n                                    Registro de Llamadas\r\n                                </button>\r\n                                <button \r\n                                    onClick={() => setActiveTab('asignaciones')}\r\n                                    className={`px-4 py-2 rounded-lg transition-colors duration-150 whitespace-nowrap ${\r\n                                        activeTab === 'asignaciones' \r\n                                            ? 'bg-blue-500 text-white dark:bg-blue-600' \r\n                                            : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                                    }`}\r\n                                >\r\n                                    Asignaciones\r\n                                </button>\r\n                                <button \r\n                                    onClick={() => setActiveTab('seguimiento')}\r\n                                    className={`px-4 py-2 rounded-lg transition-colors duration-150 whitespace-nowrap ${\r\n                                        activeTab === 'seguimiento' \r\n                                            ? 'bg-blue-500 text-white dark:bg-blue-600' \r\n                                            : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                                    }`}\r\n                                >\r\n                                    Historial de Seguimientos\r\n                                </button>\r\n                            </nav>\r\n                            \r\n                            <button \r\n                                onClick={() => auth.signOut()}\r\n                                className=\"hidden lg:block px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors duration-150\"\r\n                            >\r\n                                Cerrar Sesión\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </header>                {/* Main content */}\r\n                <main className=\"flex-1 overflow-y-auto bg-gray-50 dark:bg-gray-900 transition-colors duration-200\">\r\n                    <div className=\"responsive-container py-6\">\r\n                        <div className=\"w-full overflow-x-hidden\">\r\n                            {activeTab === 'dashboard' && <Dashboard />}\r\n                            {activeTab === 'llamadas' && <CallDataAnalyzer />}\r\n                            {activeTab === 'asignaciones' && <AssignmentManager />}\r\n                            {activeTab === 'seguimiento' && <FollowUpHistory />}\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Componente raíz de la aplicación\r\nfunction App() {\r\n    return (\r\n        <ThemeProvider>\r\n            <AuthProvider>\r\n                <DataProvider>\r\n                    <MainContent />\r\n                </DataProvider>\r\n            </AuthProvider>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect, useContext, useCallback, useRef, memo } from 'react';\r\nimport { collection, doc, setDoc, deleteDoc, onSnapshot, query, where, getDocs, writeBatch } from 'firebase/firestore';\r\nimport { read, utils } from 'xlsx';\r\nimport { ArrowUpOnSquareIcon, ArrowPathIcon, TrashIcon, ChevronDownIcon } from '@heroicons/react/24/outline';\r\nimport { db } from '../App';\r\nimport { DataContext } from '../App';\r\n\r\n// Componente Toast separado\r\nconst Toast = memo(({ message, type, onDismiss }) => {\r\n    useEffect(() => {\r\n        if (message) {\r\n            const timer = setTimeout(onDismiss, 3000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [message, onDismiss]);\r\n\r\n    if (!message) return null;\r\n\r\n    return (\r\n        <div className={`fixed bottom-5 right-5 text-white px-6 py-3 rounded-lg shadow-lg ${\r\n            type === 'success' ? 'bg-green-500' : 'bg-red-500'\r\n        }`}>\r\n            {message}\r\n        </div>\r\n    );\r\n});\r\n\r\n// Componente LoadingOverlay separado\r\nconst LoadingOverlay = ({ progress, stats }) => (\r\n    <div className=\"fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\r\n            <div className=\"flex flex-col items-center\">\r\n                <ArrowPathIcon className=\"w-12 h-12 animate-spin text-blue-500 mb-4\" />\r\n                <h3 className=\"text-lg font-semibold mb-2\">Procesando archivo...</h3>\r\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5 mb-2\">\r\n                    <div \r\n                        className=\"bg-blue-600 h-2.5 rounded-full transition-all duration-300\"\r\n                        style={{ width: `${(progress.processed / progress.total) * 100}%` }}\r\n                    />\r\n                </div>\r\n                <p className=\"text-sm text-gray-600 mb-2\">\r\n                    Procesando {progress.processed} de {progress.total} registros\r\n                </p>\r\n                {stats && (\r\n                    <div className=\"text-sm space-y-1 text-gray-600 text-center border-t border-gray-200 pt-3 mt-2 w-full\">\r\n                        <p>✅ {stats.beneficiariosCreados} nuevos beneficiarios</p>\r\n                        <p>🔄 {stats.duplicadosEncontrados} beneficiarios existentes</p>\r\n                        <p>📋 {stats.asignacionesCreadas} asignaciones creadas</p>\r\n                        {stats.errores > 0 && (\r\n                            <p className=\"text-red-500\">❌ {stats.errores} errores encontrados</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\n// Componente para la tarjeta de asignación\r\nconst AsignacionCard = memo(({ asignacion, beneficiario, onDelete }) => {\r\n    if (!beneficiario) return null;\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-between py-3 px-4 bg-white border border-gray-100 rounded-lg hover:border-gray-200 transition-colors\">\r\n            <div className=\"flex flex-col\">\r\n                <span className=\"text-sm font-medium text-gray-900\">\r\n                    {beneficiario.nombre}\r\n                </span>\r\n                {beneficiario.telefono && (\r\n                    <span className=\"text-xs text-gray-500 mt-1\">\r\n                        📞 {beneficiario.telefono}\r\n                    </span>\r\n                )}\r\n            </div>\r\n            <button\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onDelete(asignacion.id, beneficiario.nombre);\r\n                }}\r\n                className=\"text-red-600 hover:text-red-800 p-2 hover:bg-red-50 rounded-full transition-colors\"\r\n                title=\"Eliminar asignación\"\r\n            >\r\n                <TrashIcon className=\"h-5 w-5\" />\r\n            </button>\r\n        </div>\r\n    );\r\n});\r\n\r\n// Componente principal\r\nconst AssignmentManager = () => {\r\n    // Contexto\r\n    const { updateAssignments } = useContext(DataContext);\r\n\r\n    // Estados\r\n    const [loading, setLoading] = useState(true);\r\n    const [operadoras, setOperadoras] = useState([]);\r\n    const [beneficiarios, setBeneficiarios] = useState([]);\r\n    const [assignments, setAssignments] = useState([]);\r\n    const [selectedOperadora, setSelectedOperadora] = useState('');\r\n    const [selectedBeneficiario, setSelectedBeneficiario] = useState('');\r\n    const [expandedOperadora, setExpandedOperadora] = useState(null);\r\n    const [file, setFile] = useState(null);\r\n    const [toast, setToast] = useState({ message: '', type: '' });    // Estados adicionales para el manejo de carga\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [uploadProgress, setUploadProgress] = useState({ total: 0, processed: 0 });\r\n    const [uploadStats, setUploadStats] = useState({\r\n        beneficiariosCreados: 0,\r\n        duplicadosEncontrados: 0,\r\n        asignacionesCreadas: 0,\r\n        errores: 0\r\n    });\r\n\r\n    // Referencias\r\n    const loadingStatus = useRef({\r\n        operadoras: false,\r\n        beneficiarios: false,\r\n        asignaciones: false\r\n    });\r\n\r\n    // Callbacks\r\n    const checkDataLoaded = useCallback(() => {\r\n        const status = loadingStatus.current;\r\n        if (status.operadoras && status.beneficiarios && status.asignaciones) {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    const handleCreateAssignment = useCallback(async () => {\r\n        if (!selectedOperadora || !selectedBeneficiario) return;\r\n\r\n        try {\r\n            const operadora = operadoras.find(op => op.id === selectedOperadora);\r\n            const beneficiario = beneficiarios.find(b => b.id === selectedBeneficiario);\r\n\r\n            if (!operadora || !beneficiario) {\r\n                setToast({ message: 'Error: Operadora o beneficiario no encontrado', type: 'error' });\r\n                return;\r\n            }\r\n\r\n            const newAssignment = {\r\n                operadoraId: selectedOperadora,\r\n                beneficiarioId: selectedBeneficiario,\r\n                createdAt: new Date().toISOString()\r\n            };\r\n\r\n            const assignmentRef = doc(collection(db, 'asignaciones'));\r\n            await setDoc(assignmentRef, newAssignment);\r\n\r\n            setSelectedOperadora('');\r\n            setSelectedBeneficiario('');\r\n            setToast({ message: 'Asignación creada con éxito', type: 'success' });\r\n        } catch (error) {\r\n            console.error('Error creating assignment:', error);\r\n            setToast({ message: 'Error al crear la asignación', type: 'error' });\r\n        }\r\n    }, [selectedOperadora, selectedBeneficiario, operadoras, beneficiarios]);\r\n\r\n    const handleDeleteAssignment = useCallback(async (assignmentId, beneficiarioNombre) => {\r\n        try {\r\n            await deleteDoc(doc(db, 'asignaciones', assignmentId));\r\n            setToast({ \r\n                message: `Asignación de ${beneficiarioNombre} eliminada con éxito`, \r\n                type: 'success' \r\n            });\r\n        } catch (error) {\r\n            console.error('Error deleting assignment:', error);\r\n            setToast({ message: 'Error al eliminar la asignación', type: 'error' });\r\n        }\r\n    }, []);    const validateBeneficiario = async (nombre, telefono) => {\r\n        // Buscar beneficiarios existentes con el mismo nombre o teléfono\r\n        const beneficiariosRef = collection(db, 'beneficiarios');\r\n        const nombreQuery = query(beneficiariosRef, where('nombre', '==', nombre.trim()));\r\n        const telefonoQuery = telefono ? \r\n            query(beneficiariosRef, where('telefono', '==', telefono.trim())) : \r\n            null;\r\n\r\n        const [nombreSnapshot, telefonoSnapshot] = await Promise.all([\r\n            getDocs(nombreQuery),\r\n            telefonoQuery ? getDocs(telefonoQuery) : Promise.resolve({ empty: true })\r\n        ]);\r\n\r\n        if (!nombreSnapshot.empty) {\r\n            const existente = nombreSnapshot.docs[0];\r\n            return {\r\n                existe: true,\r\n                id: existente.id,\r\n                data: existente.data()\r\n            };\r\n        }\r\n\r\n        if (telefonoQuery && !telefonoSnapshot.empty) {\r\n            const existente = telefonoSnapshot.docs[0];\r\n            return {\r\n                existe: true,\r\n                id: existente.id,\r\n                data: existente.data()\r\n            };\r\n        }\r\n\r\n        return { existe: false };\r\n    };\r\n\r\n    const handleFileUpload = useCallback(async () => {\r\n        if (!file || !selectedOperadora) return;\r\n        \r\n        try {\r\n            setIsUploading(true);\r\n            const data = await file.arrayBuffer();\r\n            const workbook = read(data);\r\n            const worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n            const rows = utils.sheet_to_json(worksheet, { header: ['nombre', 'telefono'] });\r\n            \r\n            // Skip header row\r\n            const dataRows = rows.slice(1);\r\n            setUploadProgress({ total: dataRows.length, processed: 0 });\r\n\r\n            // Primero, verificar si hay asignaciones existentes para esta operadora\r\n            const asignacionesRef = collection(db, 'asignaciones');\r\n            const asignacionesQuery = query(asignacionesRef, where('operadoraId', '==', selectedOperadora));\r\n            const asignacionesSnapshot = await getDocs(asignacionesQuery);\r\n            \r\n            // Eliminar asignaciones existentes si las hay\r\n            const batch = writeBatch(db);\r\n            asignacionesSnapshot.docs.forEach(doc => {\r\n                batch.delete(doc.ref);\r\n            });\r\n            await batch.commit();\r\n              // Reiniciar estadísticas\r\n            setUploadStats({\r\n                beneficiariosCreados: 0,\r\n                duplicadosEncontrados: 0,\r\n                asignacionesCreadas: 0,\r\n                errores: 0\r\n            });\r\n            \r\n            for (const [index, row] of dataRows.entries()) {\r\n                if (!row.nombre) continue;\r\n                \r\n                try {\r\n                    setUploadProgress(prev => ({ ...prev, processed: index + 1 }));\r\n\r\n                    // Validar si el beneficiario ya existe\r\n                    const telefonos = row.telefono ? \r\n                        row.telefono.toString().split(',').map(t => t.trim()).filter(t => t) : \r\n                        [];\r\n                    \r\n                    const beneficiarioExistente = await validateBeneficiario(row.nombre, telefonos[0]);\r\n                    let beneficiarioId;                    if (beneficiarioExistente.existe) {\r\n                        setUploadStats(prev => ({\r\n                            ...prev,\r\n                            duplicadosEncontrados: prev.duplicadosEncontrados + 1\r\n                        }));\r\n                        beneficiarioId = beneficiarioExistente.id;\r\n                    } else {\r\n                        // Crear nuevo beneficiario\r\n                        const beneficiarioRef = doc(collection(db, 'beneficiarios'));\r\n                        await setDoc(beneficiarioRef, {\r\n                            nombre: row.nombre.trim(),\r\n                            telefono: telefonos[0] || '',\r\n                            telefonos: telefonos,\r\n                            createdAt: new Date().toISOString()\r\n                        });\r\n                        setUploadStats(prev => ({\r\n                            ...prev,\r\n                            beneficiariosCreados: prev.beneficiariosCreados + 1\r\n                        }));\r\n                        beneficiarioId = beneficiarioRef.id;\r\n                    }\r\n\r\n                    // Crear asignación\r\n                    const asignacionRef = doc(collection(db, 'asignaciones'));\r\n                    await setDoc(asignacionRef, {\r\n                        operadoraId: selectedOperadora,\r\n                        beneficiarioId: beneficiarioId,\r\n                        createdAt: new Date().toISOString()\r\n                    });\r\n                    setUploadStats(prev => ({\r\n                        ...prev,\r\n                        asignacionesCreadas: prev.asignacionesCreadas + 1\r\n                    }));\r\n\r\n                } catch (error) {\r\n                    console.error(`Error procesando fila ${row.nombre}:`, error);\r\n                    setUploadStats(prev => ({\r\n                        ...prev,\r\n                        errores: prev.errores + 1\r\n                    }));\r\n                }\r\n            }\r\n            \r\n            setFile(null);\r\n            setSelectedOperadora('');            const stats = uploadStats;\r\n            let message = `Proceso completado: ${stats.beneficiariosCreados} beneficiarios nuevos, ${stats.duplicadosEncontrados} existentes, ${stats.asignacionesCreadas} asignaciones creadas`;\r\n            if (stats.errores > 0) {\r\n                message += `, ${stats.errores} errores encontrados`;\r\n            }\r\n            \r\n            setToast({ message, type: stats.errores > 0 ? 'error' : 'success' });\r\n        } catch (error) {\r\n            console.error('Error procesando archivo:', error);\r\n            setToast({ message: 'Error procesando archivo', type: 'error' });\r\n        } finally {\r\n            setIsUploading(false);\r\n            setUploadProgress({ total: 0, processed: 0 });\r\n            setUploadStats({\r\n                beneficiariosCreados: 0,\r\n                duplicadosEncontrados: 0,\r\n                asignacionesCreadas: 0,\r\n                errores: 0\r\n            });\r\n        }\r\n    }, [file, selectedOperadora]);\r\n\r\n    // Efectos\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const unsubscribes = [];\r\n\r\n        const setupSubscriptions = async () => {\r\n            try {\r\n                // Suscripción a operadoras\r\n                const operadorasQuery = query(collection(db, 'users'));\r\n                const unsubOperadoras = onSnapshot(operadorasQuery, (snapshot) => {\r\n                    if (!isMounted) return;\r\n                    \r\n                    const operadorasData = snapshot.docs\r\n                        .map(doc => ({\r\n                            id: doc.id,\r\n                            ...doc.data()\r\n                        }))\r\n                        .filter(user => user.rol === 'teleoperadora');\r\n\r\n                    setOperadoras(operadorasData);\r\n                    loadingStatus.current.operadoras = true;\r\n                    checkDataLoaded();\r\n                });\r\n                unsubscribes.push(unsubOperadoras);\r\n\r\n                // Suscripción a beneficiarios\r\n                const beneficiariosQuery = query(collection(db, 'beneficiarios'));\r\n                const unsubBeneficiarios = onSnapshot(beneficiariosQuery, (snapshot) => {\r\n                    if (!isMounted) return;\r\n                    \r\n                    const beneficiariosData = snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }));\r\n                    setBeneficiarios(beneficiariosData);\r\n                    loadingStatus.current.beneficiarios = true;\r\n                    checkDataLoaded();\r\n                });\r\n                unsubscribes.push(unsubBeneficiarios);\r\n\r\n                // Suscripción a asignaciones\r\n                const asignacionesQuery = query(collection(db, 'asignaciones'));\r\n                const unsubAsignaciones = onSnapshot(asignacionesQuery, (snapshot) => {\r\n                    if (!isMounted) return;\r\n                    \r\n                    const assignmentsData = snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }));\r\n                    setAssignments(assignmentsData);\r\n                    loadingStatus.current.asignaciones = true;\r\n                    checkDataLoaded();\r\n                });\r\n                unsubscribes.push(unsubAsignaciones);\r\n\r\n            } catch (error) {\r\n                console.error('Error setting up subscriptions:', error);\r\n                if (isMounted) {\r\n                    setToast({ message: 'Error cargando datos', type: 'error' });\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        setupSubscriptions();\r\n\r\n        return () => {\r\n            isMounted = false;\r\n            unsubscribes.forEach(unsub => unsub());\r\n        };\r\n    }, [checkDataLoaded]);\r\n\r\n    // Loading state\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex flex-col items-center justify-center p-8\">\r\n                <div className=\"flex items-center mb-4\">\r\n                    <ArrowPathIcon className=\"w-8 h-8 animate-spin text-blue-500\" />\r\n                    <span className=\"ml-2\">Cargando datos...</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-6\">            {/* File upload section */}\r\n            <div className=\"bg-white rounded-xl shadow-md p-6\">\r\n                <h3 className=\"text-lg font-semibold mb-4\">Carga Masiva de Asignaciones</h3>\r\n                <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6\">\r\n                    <div className=\"mb-6\">\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            Seleccionar Teleoperadora\r\n                        </label>\r\n                        <select\r\n                            value={selectedOperadora}\r\n                            onChange={(e) => setSelectedOperadora(e.target.value)}\r\n                            className=\"w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n                        >\r\n                            <option value=\"\">Seleccionar operadora para asignación masiva</option>\r\n                            {operadoras.map(op => (\r\n                                <option key={op.id} value={op.id}>{op.nombre}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"bg-gray-50 rounded-lg p-4 mb-4\">\r\n                        <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Formato del Excel:</h4>\r\n                        <div className=\"space-y-2\">\r\n                            <p className=\"text-xs text-gray-600\">\r\n                                • Columna A: Nombre del beneficiario\r\n                            </p>\r\n                            <p className=\"text-xs text-gray-600\">\r\n                                • Columna B: Teléfonos (separados por comas)\r\n                            </p>\r\n                            <p className=\"text-xs text-gray-500 italic\">\r\n                                Nota: Los beneficiarios serán asignados a la teleoperadora seleccionada\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={(e) => setFile(e.target.files[0])}\r\n                        accept=\".xlsx,.xls\"\r\n                        className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\r\n                    />\r\n                    <button\r\n                        onClick={handleFileUpload}\r\n                        disabled={!file || !selectedOperadora}\r\n                        className=\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-gray-300 disabled:cursor-not-allowed\"\r\n                    >\r\n                        <ArrowUpOnSquareIcon className=\"h-5 w-5 mr-2\" />\r\n                        Subir y Procesar Asignaciones\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Manual assignment section */}\r\n            <div className=\"bg-white rounded-xl shadow-md p-6\">\r\n                <h3 className=\"text-lg font-semibold mb-4\">Asignación Manual</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Operadora</label>\r\n                        <select\r\n                            value={selectedOperadora}\r\n                            onChange={(e) => setSelectedOperadora(e.target.value)}\r\n                            className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n                        >\r\n                            <option value=\"\">Seleccionar operadora</option>\r\n                            {operadoras.map(op => (\r\n                                <option key={op.id} value={op.id}>{op.nombre}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Beneficiario</label>\r\n                        <select\r\n                            value={selectedBeneficiario}\r\n                            onChange={(e) => setSelectedBeneficiario(e.target.value)}\r\n                            className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n                        >\r\n                            <option value=\"\">Seleccionar beneficiario</option>\r\n                            {beneficiarios.map(b => (\r\n                                <option key={b.id} value={b.id}>{b.nombre}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    onClick={handleCreateAssignment}\r\n                    disabled={!selectedOperadora || !selectedBeneficiario}\r\n                    className=\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:bg-gray-300 disabled:cursor-not-allowed\"\r\n                >\r\n                    Crear Asignación\r\n                </button>\r\n            </div>\r\n\r\n            {/* Current assignments section */}\r\n            <div className=\"bg-white rounded-xl shadow-md overflow-hidden\">\r\n                <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                    <h3 className=\"text-lg font-semibold\">Asignaciones Actuales</h3>\r\n                </div>\r\n                <div className=\"divide-y divide-gray-200\">\r\n                    {operadoras.map(op => {\r\n                        const asignaciones = assignments.filter(a => a.operadoraId === op.id);\r\n                        \r\n                        return (\r\n                            <div key={op.id} className=\"p-6 border-b border-gray-200 last:border-b-0\">\r\n                                <div \r\n                                    className=\"flex items-center justify-between cursor-pointer hover:bg-gray-50 p-3 rounded-lg transition-colors\"\r\n                                    onClick={() => setExpandedOperadora(expandedOperadora === op.id ? null : op.id)}\r\n                                >\r\n                                    <div className=\"flex items-center space-x-3\">\r\n                                        <h4 className=\"text-lg font-medium text-gray-900\">{op.nombre}</h4>\r\n                                        <div className={`px-3 py-1 text-sm font-medium rounded-full ${\r\n                                            asignaciones.length > 0 ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'\r\n                                        }`}>\r\n                                            {asignaciones.length} beneficiarios\r\n                                        </div>\r\n                                    </div>\r\n                                    <ChevronDownIcon \r\n                                        className={`h-5 w-5 text-gray-500 transform transition-transform duration-200 ${\r\n                                            expandedOperadora === op.id ? 'rotate-180' : ''\r\n                                        }`} \r\n                                    />\r\n                                </div>\r\n                                \r\n                                {expandedOperadora === op.id && (\r\n                                    <div className=\"mt-4 space-y-2 pl-4\">\r\n                                        {asignaciones.length === 0 ? (\r\n                                            <p className=\"text-sm text-gray-500 italic py-4\">\r\n                                                No hay beneficiarios asignados a esta operadora\r\n                                            </p>\r\n                                        ) : (\r\n                                            <div className=\"space-y-2\">\r\n                                                {asignaciones.map(asignacion => {\r\n                                                    const beneficiario = beneficiarios.find(b => b.id === asignacion.beneficiarioId);\r\n                                                    return (\r\n                                                        <AsignacionCard\r\n                                                            key={asignacion.id}\r\n                                                            asignacion={asignacion}\r\n                                                            beneficiario={beneficiario}\r\n                                                            onDelete={handleDeleteAssignment}\r\n                                                        />\r\n                                                    );\r\n                                                })}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            <Toast \r\n                message={toast.message}\r\n                type={toast.type}\r\n                onDismiss={() => setToast({ message: '', type: '' })}\r\n            />\r\n\r\n            {isUploading && <LoadingOverlay progress={uploadProgress} stats={uploadStats} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignmentManager;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { DataContext, db } from '../App';\r\nimport { collection, query, getDocs, where } from 'firebase/firestore';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst StatCard = ({ title, value, subtitle, icon: Icon }) => (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 transition-colors duration-200\">\r\n        <div className=\"flex items-center\">\r\n            {Icon && <Icon className=\"h-8 w-8 text-blue-500 dark:text-blue-400 mr-3\" />}\r\n            <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">{title}</p>\r\n                <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white\">{value}</h3>\r\n                {subtitle && <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">{subtitle}</p>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst Dashboard = () => {\r\n    const { callData, assignments } = useContext(DataContext);\r\n    const [localCallData, setLocalCallData] = useState({\r\n        totalLlamados: 0,\r\n        tiempoTotal: 0,\r\n        beneficiariosAtendidos: new Set(),\r\n        rendimientoPorOperadora: {}\r\n    });\r\n    const [filters, setFilters] = useState({\r\n        fechaInicio: '',\r\n        fechaFin: '',\r\n        operadora: 'Todas las operadoras',\r\n        comuna: 'Todas las comunas',\r\n        tipo: 'Todos los tipos'\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // Obtener datos de llamadas\r\n                const llamadasQuery = query(collection(db, 'llamadas'));\r\n                const llamadasSnapshot = await getDocs(llamadasQuery);\r\n                \r\n                // Obtener datos de seguimientos\r\n                const seguimientosQuery = query(collection(db, 'seguimientos'));\r\n                const seguimientosSnapshot = await getDocs(seguimientosQuery);\r\n\r\n                const datos = {\r\n                    totalLlamados: 0,\r\n                    tiempoTotal: 0,\r\n                    beneficiariosAtendidos: new Set(),\r\n                    rendimientoPorOperadora: {}\r\n                };\r\n\r\n                // Procesar llamadas\r\n                llamadasSnapshot.forEach(doc => {\r\n                    const llamada = doc.data();\r\n                    datos.totalLlamados++;\r\n                    datos.tiempoTotal += llamada.duracion || 0;\r\n                    datos.beneficiariosAtendidos.add(llamada.beneficiario);\r\n\r\n                    if (llamada.operadora) {\r\n                        if (!datos.rendimientoPorOperadora[llamada.operadora]) {\r\n                            datos.rendimientoPorOperadora[llamada.operadora] = {\r\n                                llamados: 0,\r\n                                minutos: 0\r\n                            };\r\n                        }\r\n                        datos.rendimientoPorOperadora[llamada.operadora].llamados++;\r\n                        datos.rendimientoPorOperadora[llamada.operadora].minutos += llamada.duracion || 0;\r\n                    }\r\n                });\r\n\r\n                // Procesar seguimientos\r\n                seguimientosSnapshot.forEach(doc => {\r\n                    const seguimiento = doc.data();\r\n                    datos.totalLlamados++;\r\n                    datos.beneficiariosAtendidos.add(seguimiento.beneficiario);\r\n\r\n                    if (seguimiento.operadora) {\r\n                        if (!datos.rendimientoPorOperadora[seguimiento.operadora]) {\r\n                            datos.rendimientoPorOperadora[seguimiento.operadora] = {\r\n                                llamados: 0,\r\n                                minutos: 0\r\n                            };\r\n                        }\r\n                        datos.rendimientoPorOperadora[seguimiento.operadora].llamados++;\r\n                    }\r\n                });\r\n\r\n                setLocalCallData(datos);\r\n            } catch (error) {\r\n                console.error('Error al cargar datos:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);    // Preparar datos para los gráficos y tabla\r\n    const totalBeneficiarios = assignments?.beneficiarios?.length || 0;\r\n    const tiempoPromedioLlamada = localCallData.totalLlamados > 0 \r\n        ? Math.round((localCallData.tiempoTotal / localCallData.totalLlamados) * 10) / 10 \r\n        : 0;\r\n\r\n    // Asegurarse de que todas las operadoras asignadas aparezcan en la tabla\r\n    assignments?.operadoras?.forEach(op => {\r\n        const exists = rendimientoData.find(d => d.name === op.nombre);\r\n        if (!exists) {\r\n            rendimientoData.push({\r\n                name: op.nombre,\r\n                llamados: 0,\r\n                minutos: 0,\r\n                tiempoPromedio: 0\r\n            });\r\n        }\r\n    });\r\n\r\n    // Calcular métricas\r\n    const beneficiariosAtendidos = callData.beneficiariosAtendidos?.size || 0;\r\n    const porcentajeCobertura = totalBeneficiarios > 0 \r\n        ? Math.round((beneficiariosAtendidos / totalBeneficiarios) * 100)\r\n        : 0;    // Preparar datos para visualización\r\n    const rendimientoData = Object.entries(localCallData.rendimientoPorOperadora).map(([operadora, datos]) => ({\r\n        name: operadora,\r\n        llamados: datos.llamados,\r\n        minutos: datos.minutos,\r\n        tiempoPromedio: datos.llamados > 0 ? Math.round((datos.minutos / datos.llamados) * 10) / 10 : 0,\r\n        porcentajeTotal: Math.round((datos.llamados / localCallData.totalLlamados) * 100) || 0\r\n    }));\r\n\r\n    return (\r\n        <div className=\"space-y-6 p-6 dark:bg-gray-900\">\r\n            <div className=\"flex items-center justify-between mb-8\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Dashboard de Análisis</h2>\r\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    Última actualización: {new Date().toLocaleString()}\r\n                </div>\r\n            </div>            {/* Métricas principales */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n                <StatCard\r\n                    title=\"Total de Llamados\"\r\n                    value={localCallData.totalLlamados}\r\n                    subtitle=\"Llamadas registradas\"\r\n                />\r\n                <StatCard\r\n                    title=\"Tiempo Total (min)\"\r\n                    value={Math.round(localCallData.tiempoTotal)}\r\n                    subtitle={`Promedio: ${tiempoPromedioLlamada} min/llamada`}\r\n                />\r\n                <StatCard\r\n                    title=\"Cobertura\"\r\n                    value={`${Math.round((localCallData.beneficiariosAtendidos.size / totalBeneficiarios) * 100)}%`}\r\n                    subtitle={`${localCallData.beneficiariosAtendidos.size} de ${totalBeneficiarios} beneficiarios`}\r\n                />\r\n                <StatCard\r\n                    title=\"Operadoras Activas\"\r\n                    value={Object.keys(localCallData.rendimientoPorOperadora).length}\r\n                    subtitle=\"Teleoperadoras en servicio\"\r\n                />\r\n            </div>\r\n\r\n            {/* Filtros con diseño mejorado */}\r\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-md space-y-4\">\r\n                <h3 className=\"text-lg font-semibold text-gray-700 dark:text-gray-200 mb-4\">Filtros</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                        <label className=\"block text-sm font-medium text-gray-600\">Fecha Inicio</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                            value={filters.fechaInicio}\r\n                            onChange={(e) => setFilters({...filters, fechaInicio: e.target.value})}\r\n                        />\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                        <label className=\"block text-sm font-medium text-gray-600\">Fecha Fin</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                            value={filters.fechaFin}\r\n                            onChange={(e) => setFilters({...filters, fechaFin: e.target.value})}\r\n                        />\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                        <label className=\"block text-sm font-medium text-gray-600\">Operadora</label>\r\n                        <select\r\n                            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                            value={filters.operadora}\r\n                            onChange={(e) => setFilters({...filters, operadora: e.target.value})}\r\n                        >\r\n                            <option>Todas las operadoras</option>\r\n                            {assignments?.operadoras?.map(op => (\r\n                                <option key={op.id}>{op.nombre}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                        <label className=\"block text-sm font-medium text-gray-600\">Comuna</label>\r\n                        <select\r\n                            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                            value={filters.comuna}\r\n                            onChange={(e) => setFilters({...filters, comuna: e.target.value})}\r\n                        >\r\n                            <option>Todas las comunas</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                        <label className=\"block text-sm font-medium text-gray-600\">Tipo</label>\r\n                        <select\r\n                            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                            value={filters.tipo}\r\n                            onChange={(e) => setFilters({...filters, tipo: e.target.value})}\r\n                        >\r\n                            <option>Todos los tipos</option>\r\n                            <option>Entrante</option>\r\n                            <option>Saliente</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Métricas principales con diseño mejorado */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n                <StatCard\r\n                    title=\"Total Llamados\"\r\n                    value={callData.totalLlamados || 0}\r\n                    subtitle=\"Llamadas registradas\"\r\n                />\r\n                <StatCard\r\n                    title=\"Tiempo Total\"\r\n                    value={`${callData.tiempoTotal || 0} min`}\r\n                    subtitle={`${tiempoPromedioLlamada} min/llamada`}\r\n                />\r\n                <StatCard\r\n                    title=\"Cobertura\"\r\n                    value={`${porcentajeCobertura}%`}\r\n                    subtitle={`${beneficiariosAtendidos} de ${totalBeneficiarios} beneficiarios`}\r\n                />\r\n                <StatCard\r\n                    title=\"Operadoras Activas\"\r\n                    value={assignments?.operadoras?.length || 0}\r\n                    subtitle=\"Teleoperadoras registradas\"\r\n                />\r\n            </div>\r\n\r\n            {/* Gráfico de Llamados por Teleoperadora */}\r\n            <div className=\"mt-8\">\r\n                <h3 className=\"text-lg font-semibold text-gray-700 dark:text-gray-200 mb-4\">Rendimiento por Teleoperadora</h3>\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-md p-6\">\r\n                    <ResponsiveContainer width=\"100%\" height={400}>\r\n                        <BarChart data={rendimientoData}>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\r\n                            <XAxis dataKey=\"name\" stroke=\"#374151\" />\r\n                            <YAxis stroke=\"#374151\" />\r\n                            <Tooltip \r\n                                contentStyle={{ \r\n                                    backgroundColor: '#1f2937',\r\n                                    border: 'none',\r\n                                    borderRadius: '0.5rem',\r\n                                    color: '#f3f4f6'\r\n                                }}\r\n                            />\r\n                            <Legend />\r\n                            <Bar dataKey=\"llamados\" fill=\"#3b82f6\" name=\"Llamados\" />\r\n                            <Bar dataKey=\"minutos\" fill=\"#10b981\" name=\"Minutos\" />\r\n                        </BarChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mt-8\">\r\n                <h3 className=\"text-lg font-semibold text-gray-700 dark:text-gray-200 mb-4\">Detalle por Teleoperadora</h3>\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden\">\r\n                    <div className=\"overflow-x-auto\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                            <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Operadora</th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Llamados</th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Minutos Totales</th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Tiempo Promedio</th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">% del Total</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                                {rendimientoData.map((operadora, idx) => (\r\n                                    <tr key={idx} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">{operadora.name}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">{operadora.llamados}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">{operadora.minutos}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">{operadora.tiempoPromedio}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">{operadora.porcentajeTotal}%</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useContext, useMemo } from 'react';\r\nimport { DataContext } from '../App';\r\nimport { ExclamationTriangleIcon, CheckCircleIcon, XCircleIcon, FunnelIcon } from '@heroicons/react/24/outline';\r\nimport { normalizeName } from '../utils/textUtils';\r\nimport { getTeleoperadora } from '../utils/operadoraUtils';\r\n\r\nconst STATUS = {\r\n    OK: 'ok',            // Al día con al menos 1 llamada exitosa en los últimos 15 días\r\n    WARNING: 'warning',  // Tiene llamadas pero no exitosas en los últimos 15 días\r\n    DANGER: 'danger'    // Sin llamadas o sin llamadas exitosas en los últimos 30 días\r\n};\r\n\r\n// Función para calcular el estado de un beneficiario\r\nconst getBeneficiaryStatus = (llamadas) => {\r\n    if (!llamadas || llamadas.length === 0) return STATUS.DANGER;\r\n\r\n    const now = new Date();\r\n    const llamadasOrdenadas = [...llamadas].sort((a, b) => new Date(b.fecha) - new Date(a.fecha));\r\n    const ultimaLlamada = llamadasOrdenadas[0];\r\n    const diasDesdeUltimaLlamada = Math.floor((now - new Date(ultimaLlamada.fecha)) / (1000 * 60 * 60 * 24));\r\n\r\n    // Buscar la última llamada exitosa\r\n    const ultimaLlamadaExitosa = llamadasOrdenadas.find(llamada => \r\n        llamada.resultado?.toLowerCase().includes('exitoso')\r\n    );\r\n\r\n    if (ultimaLlamadaExitosa) {\r\n        const diasDesdeUltimaExitosa = Math.floor((now - new Date(ultimaLlamadaExitosa.fecha)) / (1000 * 60 * 60 * 24));\r\n        if (diasDesdeUltimaExitosa <= 15) {\r\n            return STATUS.OK;\r\n        }\r\n    }\r\n\r\n    if (diasDesdeUltimaLlamada > 30) {\r\n        return STATUS.DANGER;\r\n    }\r\n\r\n    return STATUS.WARNING;\r\n};\r\n\r\n// Función para obtener el número de llamadas exitosas en el mes actual\r\nconst getLlamadasExitosasDelMes = (llamadas) => {\r\n    if (!llamadas || !Array.isArray(llamadas)) return 0;\r\n    \r\n    const now = new Date();\r\n    const primerDiaMes = new Date(now.getFullYear(), now.getMonth(), 1);\r\n    \r\n    return llamadas.filter(llamada => {\r\n        const fechaLlamada = new Date(llamada.fecha);\r\n        return fechaLlamada >= primerDiaMes && \r\n               fechaLlamada <= now && \r\n               llamada.resultado?.toLowerCase().includes('exitoso');\r\n    }).length;\r\n};\r\n\r\n// Tarjeta de beneficiario\r\nconst BeneficiaryCard = ({ \r\n    beneficiary = 'Sin nombre', \r\n    status = STATUS.DANGER, \r\n    comuna = 'Sin comuna registrada', \r\n    llamadasExitosas = [], \r\n    totalLlamadas = 0, \r\n    llamadasExitosasDelMes = 0,\r\n    ultimaLlamada\r\n}) => {\r\n    return (\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-4 space-y-4\">\r\n            <div className=\"flex justify-between items-start\">\r\n                <div className=\"space-y-1\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                        {beneficiary}\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        {comuna}\r\n                    </p>\r\n                </div>\r\n                <span className={`inline-block px-3 py-1 rounded-full text-xs font-semibold ${\r\n                    status === STATUS.OK ? 'bg-green-100 text-green-800' :\r\n                    status === STATUS.WARNING ? 'bg-yellow-100 text-yellow-800' :\r\n                    'bg-red-100 text-red-800'\r\n                }`}>\r\n                    {status === STATUS.OK ? 'Al día' : status === STATUS.WARNING ? 'Pendiente' : 'Urgente'}\r\n                </span>\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                    Total llamadas: {totalLlamadas}\r\n                </p>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                    Llamadas exitosas este mes: {llamadasExitosasDelMes}\r\n                </p>\r\n                {ultimaLlamada && (\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                        Última llamada: {ultimaLlamada}\r\n                    </p>\r\n                )}\r\n                {llamadasExitosas && llamadasExitosas.length > 0 && (\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">\r\n                            Últimas llamadas exitosas:\r\n                        </p>\r\n                        {llamadasExitosas.slice(-3).reverse().map((fecha, index) => (\r\n                            <div key={`${fecha}-${index}`} className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                                {fecha}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction FollowUpHistory() {\r\n    const { callData, assignments } = useContext(DataContext);\r\n    const [activeFilter, setActiveFilter] = useState('all');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedComuna, setSelectedComuna] = useState('all');\r\n\r\n    // Procesar datos de beneficiarios\r\n    const beneficiaryData = useMemo(() => {\r\n        if (!callData?.llamadasPorBeneficiario) {\r\n            console.log('No hay datos de beneficiarios');\r\n            return [];\r\n        }\r\n\r\n        return Object.entries(callData.llamadasPorBeneficiario).map(([beneficiario, datos]) => {\r\n            const llamadas = datos.llamadas || [];\r\n            const status = getBeneficiaryStatus(llamadas);\r\n            const comuna = llamadas[0]?.comuna || 'Sin comuna';\r\n            const llamadasExitosas = llamadas.filter(ll => ll.resultado?.toLowerCase().includes('exitoso'));\r\n            const ultimaLlamada = llamadas.length > 0 \r\n                ? new Date(Math.max(...llamadas.map(ll => new Date(ll.fecha)))).toLocaleDateString()\r\n                : null;\r\n\r\n            return {\r\n                beneficiario,\r\n                status,\r\n                comuna,\r\n                llamadasExitosas: llamadasExitosas.map(ll => new Date(ll.fecha).toLocaleDateString()),\r\n                totalLlamadas: llamadas.length,\r\n                llamadasExitosasDelMes: getLlamadasExitosasDelMes(llamadas),\r\n                ultimaLlamada\r\n            };\r\n        });\r\n    }, [callData?.llamadasPorBeneficiario]);\r\n\r\n    // Filtrar beneficiarios\r\n    const filteredBeneficiaries = useMemo(() => {\r\n        return beneficiaryData.filter(b => {\r\n            const matchesSearch = b.beneficiario.toLowerCase().includes(searchTerm.toLowerCase());\r\n            const matchesComuna = selectedComuna === 'all' || b.comuna === selectedComuna;\r\n            const matchesFilter = activeFilter === 'all' || \r\n                                (activeFilter === 'uptodate' && b.status === STATUS.OK) ||\r\n                                (activeFilter === 'urgent' && b.status === STATUS.DANGER) ||\r\n                                (activeFilter === 'warning' && b.status === STATUS.WARNING);\r\n            \r\n            return matchesSearch && matchesComuna && matchesFilter;\r\n        });\r\n    }, [beneficiaryData, searchTerm, selectedComuna, activeFilter]);\r\n\r\n    // Obtener comunas únicas\r\n    const comunas = useMemo(() => {\r\n        const uniqueComunas = new Set(beneficiaryData.map(b => b.comuna));\r\n        return Array.from(uniqueComunas).sort();\r\n    }, [beneficiaryData]);\r\n\r\n    // Contar beneficiarios por estado\r\n    const counts = useMemo(() => ({\r\n        total: beneficiaryData.length,\r\n        uptodate: beneficiaryData.filter(b => b.status === STATUS.OK).length,\r\n        urgentes: beneficiaryData.filter(b => b.status === STATUS.DANGER).length,\r\n        pendientes: beneficiaryData.filter(b => b.status === STATUS.WARNING).length\r\n    }), [beneficiaryData]);\r\n\r\n    const StatusCounter = ({ label, count, className }) => (\r\n        <div className={`flex flex-col items-center p-4 rounded-lg shadow-md ${className}`}>\r\n            <span className=\"text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase\">{label}</span>\r\n            <span className=\"text-2xl font-bold text-gray-900 dark:text-white\">{count}</span>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"p-6 space-y-6\">\r\n            {/* Filtros */}\r\n            <div className=\"flex flex-col lg:flex-row gap-4 items-start lg:items-center bg-white dark:bg-gray-800 p-4 rounded-lg shadow\">\r\n                <div className=\"flex items-center gap-2\">\r\n                    <FunnelIcon className=\"h-5 w-5 text-gray-500 dark:text-gray-400\" />\r\n                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Filtros:</span>\r\n                </div>\r\n                \r\n                {/* Selector de Comuna */}\r\n                <div className=\"flex-1\">\r\n                    <select\r\n                        value={selectedComuna}\r\n                        onChange={(e) => setSelectedComuna(e.target.value)}\r\n                        className=\"block w-full rounded-md border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-sm focus:border-blue-500 focus:ring-blue-500 dark:text-gray-200\"\r\n                    >\r\n                        {comunas.map(comuna => (\r\n                            <option key={comuna} value={comuna}>\r\n                                {comuna === 'todas' ? 'Todas las comunas' : comuna}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                {/* Selector de Estado */}\r\n                <div className=\"flex-1\">\r\n                    <select\r\n                        value={activeFilter}\r\n                        onChange={(e) => setActiveFilter(e.target.value)}\r\n                        className=\"block w-full rounded-md border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-sm focus:border-blue-500 focus:ring-blue-500 dark:text-gray-200\"\r\n                    >\r\n                        <option value=\"all\">Todos los estados</option>\r\n                        <option value={STATUS.OK}>Al día</option>\r\n                        <option value={STATUS.WARNING}>Atención</option>\r\n                        <option value={STATUS.DANGER}>Urgentes</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* Buscador */}\r\n                <div className=\"flex-1\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Buscar beneficiario...\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        className=\"block w-full rounded-md border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-sm focus:border-blue-500 focus:ring-blue-500 dark:text-gray-200\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Contadores */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n                <StatusCounter\r\n                    label=\"Todos\"\r\n                    count={counts.total}\r\n                    className=\"bg-gray-100 dark:bg-gray-700\"\r\n                />\r\n                <StatusCounter\r\n                    label=\"Al día\"\r\n                    count={counts.uptodate}\r\n                    className=\"bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-100\"\r\n                />\r\n                <StatusCounter\r\n                    label=\"Urgentes\"\r\n                    count={counts.urgentes}\r\n                    className=\"bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-100\"\r\n                />\r\n                <StatusCounter\r\n                    label=\"Pendientes\"\r\n                    count={counts.pendientes}\r\n                    className=\"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-100\"\r\n                />\r\n            </div>\r\n\r\n            {/* Lista de Beneficiarios */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {filteredBeneficiaries.map((b, index) => (\r\n                    <BeneficiaryCard\r\n                        key={`${b.beneficiario}-${index}`}\r\n                        beneficiary={b.beneficiario}\r\n                        status={b.status}\r\n                        comuna={b.comuna}\r\n                        llamadasExitosas={b.llamadasExitosas}\r\n                        totalLlamadas={b.totalLlamadas}\r\n                        llamadasExitosasDelMes={b.llamadasExitosasDelMes}\r\n                        ultimaLlamada={b.ultimaLlamada}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FollowUpHistory;\r\n","import React, { useState } from 'react';\r\nimport { useAuth } from '../App';\r\n\r\nconst LoginForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const { signIn } = useAuth();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setError('');\r\n            await signIn(email, password);\r\n        } catch (err) {\r\n            setError('Error al iniciar sesión: ' + err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-100 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"max-w-md w-full space-y-8\">\r\n                <div>\r\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900 dark:text-white\">\r\n                        Iniciar Sesión\r\n                    </h2>\r\n                </div>\r\n                <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n                    <div className=\"rounded-md shadow-sm -space-y-px\">\r\n                        <div>\r\n                            <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                                Correo electrónico\r\n                            </label>\r\n                            <input\r\n                                id=\"email-address\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                autoComplete=\"email\"\r\n                                required\r\n                                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 dark:text-white dark:bg-gray-800 dark:border-gray-700 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                                placeholder=\"Correo electrónico\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\" className=\"sr-only\">\r\n                                Contraseña\r\n                            </label>\r\n                            <input\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                required\r\n                                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 dark:text-white dark:bg-gray-800 dark:border-gray-700 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                                placeholder=\"Contraseña\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {error && (\r\n                        <div className=\"text-red-500 text-sm text-center\">\r\n                            {error}\r\n                        </div>\r\n                    )}\r\n\r\n                    <div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                        >\r\n                            Iniciar Sesión\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App'\r\nimport { ThemeProvider, AuthProvider, DataProvider } from './App'\r\nimport './index.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(\r\n  <React.StrictMode>\r\n    <ThemeProvider>\r\n      <AuthProvider>\r\n        <DataProvider>\r\n          <App />\r\n        </DataProvider>\r\n      </AuthProvider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>\r\n)\r\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","ArrowDownOnSquareIcon","title","titleId","svgRef","assign","xmlns","fill","viewBox","strokeWidth","stroke","React.createElement","id","strokeLinecap","strokeLinejoin","client","createRoot","hydrateRoot","ArrowDownOnSquareIcon$1","React.forwardRef","ArrowPathIcon","ArrowPathIcon$1","ArrowUpOnSquareIcon","ArrowUpOnSquareIcon$1","ChartBarIcon","ChartBarIcon$1","ChevronDownIcon","ChevronDownIcon$1","ClockIcon","ClockIcon$1","DocumentTextIcon","DocumentTextIcon$1","FunnelIcon","FunnelIcon$1","PhoneIcon","PhoneIcon$1","TrashIcon","TrashIcon$1","getTeleoperadora","telefono","nombre","assignments","asignaciones","normalizedTelefono","toString","trim","normalizedNombre","normalizeName","operadoraNombre","entries","Array","isArray","some","asignacion","nombreAsignacionNormalizado","beneficiario","nombreCoincide","telefonoCoincide","telefonos","tel","ErrorBoundary","React","Component","constructor","super","this","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","console","render","className","children","message","jsxRuntimeExports","onClick","setState","StatsDisplay$1","memo","value","icon","subtitle","percentage","toLocaleString","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","options","responsive","maintainAspectRatio","plugins","legend","position","scales","y","beginAtZero","ticks","precision","BarChart","data","_a","labels","length","Bar","DetailedStatsView","stats","operatorStats","comunasData","comunas","map","comuna","beneficiarios","cantidad","sort","operadorasData","operadora","totalLlamadas","promedioLlamadas","toFixed","duracionPromedio","duracionTotal","Math","round","Fragment","colSpan","index","datasets","label","backgroundColor","LoadingOverlay","progress","style","width","CallDataAnalyzer","callData","updateCallData","useContext","DataContext","file","setFile","useState","loading","setLoading","setProgress","setError","setStats","createInitialStats","fileInputRef","useRef","debounceTimerRef","uploadTimeout","processingTimeout","initialStatsRef","previousStatsRef","useEffect","clearTimeout","parsedStats","parseStoredStats","processFile","useCallback","async","reader","FileReader","onload","target","result","Error","Uint8Array","workbook","read","SheetNames","firstSheet","Sheets","rows","utils","sheet_to_json","header","dataRows","slice","totalRows","currentStats","processChunk","startIndex","endIndex","min","forEach","row","fecha","evento","horaIni","horaFin","duracion","resultado","observacion","apiId","fechaObj","excelDateToISO","teleoperadora","exitoso","toLowerCase","includes","duracionMinutos","parseInt","llamada","hora","tipo","comentarios","entrantes","salientes","isNaN","add","llamadasPorBeneficiario","push","ultimasLlamadas","has","set","Set","get","ultimaLlamada","diasDesdeUltimaLlamada","floor","Date","beneficiariosAlDia","beneficiariosPendientes","beneficiariosUrgentes","teleoperadoras","total","exitosas","err","setTimeout","onerror","readAsArrayBuffer","handleFileChange","event","selectedFile","files","name","match","resetState","JSON","stringify","_b","reduce","acc","click","disabled","onChange","accept","fillRule","clipRule","StatsDisplay","size","Map","horasPico","datos","diasTrabajados","Logo","darkMode","toggleTheme","ThemeContext","src","alt","Toast","onDismiss","timer","processed","beneficiariosCreados","duplicadosEncontrados","asignacionesCreadas","errores","AsignacionCard","onDelete","stopPropagation","AssignmentManager","operadoras","setOperadoras","setBeneficiarios","setAssignments","selectedOperadora","setSelectedOperadora","selectedBeneficiario","setSelectedBeneficiario","expandedOperadora","setExpandedOperadora","toast","setToast","isUploading","setIsUploading","uploadProgress","setUploadProgress","uploadStats","setUploadStats","loadingStatus","checkDataLoaded","status","handleCreateAssignment","find","op","newAssignment","operadoraId","beneficiarioId","createdAt","toISOString","assignmentRef","doc","collection","db","setDoc","handleDeleteAssignment","assignmentId","beneficiarioNombre","deleteDoc","validateBeneficiario","beneficiariosRef","nombreQuery","query","where","telefonoQuery","nombreSnapshot","telefonoSnapshot","Promise","all","getDocs","resolve","empty","existente","docs","existe","handleFileUpload","arrayBuffer","worksheet","asignacionesRef","asignacionesQuery","asignacionesSnapshot","batch","writeBatch","delete","commit","prev","split","t","filter","beneficiarioExistente","beneficiarioRef","asignacionRef","isMounted","unsubscribes","operadorasQuery","unsubOperadoras","onSnapshot","snapshot","user","rol","beneficiariosQuery","unsubBeneficiarios","beneficiariosData","unsubAsignaciones","assignmentsData","unsub","StatCard","Icon","Dashboard","localCallData","setLocalCallData","totalLlamados","tiempoTotal","beneficiariosAtendidos","rendimientoPorOperadora","filters","setFilters","fechaInicio","fechaFin","llamadasQuery","llamadasSnapshot","seguimientosQuery","seguimientosSnapshot","llamados","minutos","seguimiento","totalBeneficiarios","tiempoPromedioLlamada","rendimientoData","tiempoPromedio","_c","porcentajeCobertura","porcentajeTotal","keys","_d","_e","ResponsiveContainer","height","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","contentStyle","border","borderRadius","color","scope","idx","STATUS","getLlamadasExitosasDelMes","llamadas","now","primerDiaMes","getFullYear","getMonth","fechaLlamada","BeneficiaryCard","beneficiary","llamadasExitosas","llamadasExitosasDelMes","reverse","FollowUpHistory","activeFilter","setActiveFilter","searchTerm","setSearchTerm","selectedComuna","setSelectedComuna","beneficiaryData","useMemo","llamadasOrdenadas","ultimaLlamadaExitosa","getBeneficiaryStatus","ll","max","toLocaleDateString","log","filteredBeneficiaries","matchesSearch","matchesComuna","matchesFilter","uniqueComunas","from","counts","uptodate","urgentes","pendientes","StatusCounter","count","placeholder","LoginForm","email","setEmail","password","setPassword","signIn","useAuth","onSubmit","preventDefault","htmlFor","autoComplete","required","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","auth","getAuth","getFirestore","AuthContext","createContext","AuthProvider","setUser","onAuthStateChanged","signInWithEmailAndPassword","signOut","Provider","initialCallData","lastUpdate","DataProvider","setCallData","saved","localStorage","getItem","parse","setItem","newData","prevData","updateAssignments","newAssignments","reset","removeItem","ThemeProvider","setDarkMode","document","documentElement","classList","toggle","MainContent","activeTab","setActiveTab","App","ReactDOM","getElementById","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}